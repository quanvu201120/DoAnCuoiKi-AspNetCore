// <auto-generated />
using System;
using DoAnCuoiKi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAnCuoiKi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAnCuoiKi.Data.Brand", b =>
                {
                    b.Property<int>("brandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("brandId"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("brandId");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.Cart", b =>
                {
                    b.Property<int>("cartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cartId"));

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("cartId");

                    b.HasIndex("productId");

                    b.HasIndex("userId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryId"));

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            categoryId = 1,
                            name = "Chuột - bàn phím"
                        },
                        new
                        {
                            categoryId = 2,
                            name = "Thiết bị âm thanh"
                        },
                        new
                        {
                            categoryId = 3,
                            name = "Linh kiện PC - Laptop"
                        },
                        new
                        {
                            categoryId = 4,
                            name = "SSD"
                        },
                        new
                        {
                            categoryId = 5,
                            name = "HDD"
                        },
                        new
                        {
                            categoryId = 6,
                            name = "Ram máy tính"
                        },
                        new
                        {
                            categoryId = 7,
                            name = "Ổ cứng di động"
                        },
                        new
                        {
                            categoryId = 8,
                            name = "Ổ cứng SSD di động"
                        },
                        new
                        {
                            categoryId = 9,
                            name = "Thẻ nhớ"
                        },
                        new
                        {
                            categoryId = 10,
                            name = "USB"
                        });
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.Order", b =>
                {
                    b.Property<int>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderId"));

                    b.Property<string>("customerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("otherInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<double>("totalPrice")
                        .HasColumnType("float");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("orderId");

                    b.HasIndex("userId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.OrderDetails", b =>
                {
                    b.Property<int>("orderDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderDetailsId"));

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<int>("productAmout")
                        .HasColumnType("int");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("totalPrice")
                        .HasColumnType("float");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("orderDetailsId");

                    b.HasIndex("userId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.Product", b =>
                {
                    b.Property<int?>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("productId"));

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<int>("brandId")
                        .HasColumnType("int");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.HasKey("productId");

                    b.HasIndex("brandId");

                    b.HasIndex("categoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.User", b =>
                {
                    b.Property<int?>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("userId"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            address = "VN",
                            email = "admin@gmail.com",
                            gender = "Nam",
                            name = "admin",
                            password = "123123",
                            phone = "0338786222",
                            role = "Admin"
                        });
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.Cart", b =>
                {
                    b.HasOne("DoAnCuoiKi.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnCuoiKi.Data.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.Order", b =>
                {
                    b.HasOne("DoAnCuoiKi.Data.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.OrderDetails", b =>
                {
                    b.HasOne("DoAnCuoiKi.Data.Order", "order")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("order");
                });

            modelBuilder.Entity("DoAnCuoiKi.Data.Product", b =>
                {
                    b.HasOne("DoAnCuoiKi.Data.Brand", "brand")
                        .WithMany()
                        .HasForeignKey("brandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnCuoiKi.Data.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("brand");

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
